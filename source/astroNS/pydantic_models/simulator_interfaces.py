# simulator_interfaces.py
"""
Pydantic models representing the JSON message formats for the Simulator component.

These models define the structure of messages flowing into and out of the Simulator
via Apache Pulsar, based on the schemas defined in simulator_interfaces.md.
"""

from typing import Dict, Optional, Any, Union
from pydantic import BaseModel, Field


class TaskAssignment(BaseModel):
    """
    Message instructing the Simulator to perform a collection task, including key opportunity details.
    
    Consumed by: Simulator
    Produced by: Agent Framework
    Pulsar Topic: persistent://twosix/sixgeo/task-assignments
    """
    assignment_id: str = Field(
        description="Unique ID for this specific assignment instance (e.g., UUID string from Python agent)."
    )
    opportunity_id: str = Field(
        description="ID of the opportunity being assigned (string representation of what might be a BIGSERIAL in the DB)."
    )
    task_id: str = Field(
        description="ID of the original task (string representation of what might be a BIGSERIAL in the DB)."
    )
    satellite_name: str = Field(
        description="Name of the satellite assigned for the collection."
    )
    assigned_by_agent_id: Optional[str] = Field(
        default=None,
        description="ID of the agent that made this assignment."
    )
    status: str = Field(
        description="Status of the assignment (e.g., 'pending_simulation')."
    )
    target_id: str = Field(
        description="ID of the target for this collection (string representation of what might be a BIGSERIAL in the DB)."
    )
    aimpoint_latitude: float = Field(
        description="Latitude of the aimpoint for the collection."
    )
    aimpoint_longitude: float = Field(
        description="Longitude of the aimpoint for the collection."
    )
    access_start_time_unix_ts: float = Field(
        description="Start of the collection access window (Unix timestamp, float seconds)."
    )
    access_end_time_unix_ts: float = Field(
        description="End of the collection access window (Unix timestamp, float seconds)."
    )
    predicted_value_at_assignment: Optional[float] = Field(
        default=None,
        description="Predicted value of the opportunity at the time of assignment."
    )
    predicted_cloud_cover_at_assignment: Optional[float] = Field(
        default=None, 
        description="Predicted cloud cover (0.0 to 1.0) at the time of assignment."
    )
    mean_look_angle_at_assignment: Optional[float] = Field(
        default=None,
        description="Mean look angle (degrees) for the opportunity at assignment."
    )


class SimulatorControlMessage(BaseModel):
    """
    Control message for the Simulator, primarily for triggering processing and time advancement.
    
    Consumed by: Simulator
    Produced by: Agent Framework
    Pulsar Topic: persistent://twosix/sixgeo/simulator-control
    """
    message_type: str = Field(
        description="Type of control message (e.g., 'END_OF_ASSIGNMENT_BATCH_AND_ADVANCE_TIME')."
    )
    timestamp: float = Field(
        description="Wall-clock Unix timestamp (float seconds) when the message was created by the agent."
    )
    batch_id: Optional[str] = Field(
        default=None,
        description="Optional ID for the batch of assignments this control message corresponds to."
    )
    advance_simulation_time_to_unix_ts: Optional[float] = Field(
        default=None,
        description="Instructs the Simulator to advance its internal simulation time to this Unix timestamp (float seconds) after processing relevant tasks from the current batch."
    )
    payload: Optional[Dict[str, Any]] = Field(
        default=None,
        description="Optional additional key-value data for the control message."
    )


class CollectedTargetData(BaseModel):
    """
    Output from the Simulator detailing the results of a simulated collection.
    
    Produced by: Simulator
    Consumed by: CollectEvaluator
    Pulsar Topic: persistent://twosix/sixgeo/collected-target-data
    
    Note: In this message, OpportunityID, TaskID, and TargetID are numeric (int64).
    The Simulator converts these from the string format received in the TaskAssignment message
    to align with the CollectEvaluator's database interaction expectations.
    """
    collected_target_data_id: str = Field(
        description="Unique ID for this collection data record (e.g., UUID string generated by Simulator)."
    )
    assignment_id: str = Field(
        description="ID of the TaskAssignment that triggered this simulation (passed through)."
    )
    opportunity_id: int = Field(
        description="ID of the original opportunity (numeric, int64)."
    )
    task_id: int = Field(
        description="ID of the original task (numeric, int64)."
    )
    target_id: int = Field(
        description="ID of the target (numeric, int64)."
    )
    satellite_name: str = Field(
        description="Name of the satellite that performed the simulated collection."
    )
    aimpoint_latitude: float = Field(
        description="Latitude of the aimpoint used for the simulation (passed through from TaskAssignment)."
    )
    aimpoint_longitude: float = Field(
        description="Longitude of the aimpoint used for the simulation (passed through from TaskAssignment)."
    )
    collection_time_unix_ts: float = Field(
        description="Simulated time of collection (Unix timestamp, float seconds)."
    )
    simulated_success_status: bool = Field(
        description="Boolean indicating if the simulated collection was successful."
    )
    failure_reason: Optional[str] = Field(
        default=None,
        description="Reason for collection failure, if applicable (e.g., 'CLOUD_COVER', 'SENSOR_MALFUNCTION')."
    )
    simulated_quality_score: Optional[float] = Field(
        default=None,
        description="Overall quality score of the simulated collection (e.g., 0.0 to 1.0, or NIIRS)."
    )
    simulated_gsd_cm: Optional[float] = Field(
        default=None,
        description="Simulated Ground Sample Distance in centimeters."
    )
    simulated_cloud_cover_percent: Optional[float] = Field(
        default=None,
        description="Actual cloud cover percentage used or determined by the simulator (0.0 to 1.0)."
    )
    simulated_area_covered_sqkm: Optional[float] = Field(
        default=None,
        description="Simulated area covered in square kilometers."
    )
    additional_sim_metadata: Optional[Dict[str, Any]] = Field(
        default=None,
        description="Optional key-value pairs for any other simulation-specific outputs."
    )
    notes_from_simulator: Optional[str] = Field(
        default=None,
        description="General textual notes from the simulator regarding this collection."
    )